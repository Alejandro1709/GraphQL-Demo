{"version":3,"sources":["logo.jpg","components/LaucnItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","index.js"],"names":["LaucnItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","React","Component","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55d48713.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9bf807c0.jpg\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nconst LaucnItem = ({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n}) => {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{' '}\n            <span\n              className={classNames({\n                'text-success': launch_success,\n                'text-danger': !launch_success,\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link className=\"btn btn-secondary\" to={`/flight/${flight_number}`}>\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LaucnItem;\n","import React from 'react';\n\nconst MissionKey = () => {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Failed\n      </p>\n    </div>\n  );\n};\n\nexport default MissionKey;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaucnItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nconst Launches = () => {\n  return (\n    <Fragment>\n      <h1 className=\"display-4 my-3\">Launches</h1>\n      <MissionKey />\n      <Query query={LAUNCHES_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>Loading...</h4>;\n          if (error) console.log(error);\n          console.log(data);\n\n          return (\n            <Fragment>\n              {data.launches.map((launch) => (\n                <LaunchItem key={launch.flight_number} launch={launch} />\n              ))}\n            </Fragment>\n          );\n        }}\n      </Query>\n    </Fragment>\n  );\n};\n\nexport default Launches;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nclass Launch extends React.Component {\n  render() {\n    let { flight_number } = this.props.match.params;\n    flight_number = parseInt(flight_number);\n\n    return (\n      <Fragment>\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n\n            const {\n              mission_name,\n              flight_number,\n              launch_year,\n              launch_success,\n              rocket: { rocket_id, rocket_name, rocket_type },\n            } = data.launch;\n            return (\n              <div>\n                <h1 className=\"display-4 my-3\">\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\n                </h1>\n                <h4 className=\"mb-3\">Launch Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Flight Number: {flight_number}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Year: {launch_year}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Launch Succesful:{' '}\n                    <span\n                      className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success,\n                      })}\n                    >\n                      {launch_success ? 'Yes' : 'No'}\n                    </span>\n                  </li>\n                </ul>\n                <h4 className=\"my-3\">Rocket Details</h4>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                  <li className=\"list-group-item\">\n                    Rocket Name: {rocket_name}\n                  </li>\n                  <li className=\"list-group-item\">\n                    Rocket Type: {rocket_type}\n                  </li>\n                </ul>\n                <hr />\n                <Link className=\"btn btn-secondary\" to=\"/\">\n                  Flight back to home\n                </Link>\n                <br />\n              </div>\n            );\n          }}\n        </Query>\n      </Fragment>\n    );\n  }\n}\n\nexport default Launch;\n","import ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Route, Switch } from 'react-router-dom';\nimport logo from './logo.jpg';\nimport Launches from './components/Launches';\nimport './App.css';\nimport Launch from './components/Launch';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"container\">\n        <img\n          src={logo}\n          alt=\"logo\"\n          style={{ width: 300, display: 'block', margin: 'auto' }}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/flight/:flight_number\" component={Launch} />\n        </Switch>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}